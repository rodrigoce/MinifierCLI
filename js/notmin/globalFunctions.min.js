function gfnFisrtLetterLower(name) { return name.substr(0, 1).toLowerCase() + name.substr(1); } function gfnGetFloat(el) { let valor = el.val() || "0"; return parseFloat(valor.replace(/[.]/g, "").replace(/[,]/g, ".")); }
function gfnFormatFloat(value, precision) { return value.toFixed(precision).replace(/[.]/g, "x").replace(/[,]/g, ".").replace(/[x]/g, ","); } function gfnUrlMergeParam(url, paramName, paramValue) { paramValue = encodeURIComponent(paramValue); let pIniQueryString = url.indexOf("?");
if (pIniQueryString === -1) return url + "?" + paramName + "=" + paramValue; let pParam = url.indexOf(paramName + "=", pIniQueryString); if (pParam === -1) return url += "&" + paramName + "=" + paramValue; else {
let pFim = url.indexOf("&", pParam); if (pFim === -1) return url.substring(0, pParam) + paramName + "=" + paramValue; else return url.substring(0, pParam) + paramName + "=" + paramValue + url.substring(pFim, url.length); }
} function gfnGetDefaultRouteWithoutID(url) { let index = 0; for (index = url.length; index >= 0; index--) { if (url[index] === "/") break; } return url.substr(0, index + 1); } 